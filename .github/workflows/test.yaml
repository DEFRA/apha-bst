name: Sample Test RUn
on:
  workflow_dispatch:
  push:
    branches:
      - 'feature/*'
      # - 'fix/*'
      # - 'docs/*'
      # - main
env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE: 'src/Apha.BST.sln' # Replace with your solution file
  SONAR_PROJECT_KEY: 'DEFRA_apha-bst'
  SONAR_ORG: 'defra'
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  build-test-sonar:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required to fetch all history and refs

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Build solution
      run: dotnet build ${{ env.SOLUTION_FILE }} --no-restore --configuration Release /p:DebugType=full /p:DebugSymbols=true

    - name: Run unit tests with OpenCover coverage
      run: |
        # Update this block for each test project 
        dotnet test src/Apha.BST/Apha.BST.Application.UnitTests/Apha.BST.Application.UnitTests.csproj \
          --no-build --configuration Release \
          /p:CollectCoverage=true \
          /p:CoverletOutput=../../../TestResults/Apha.BST.Application.coverage.opencover.xml \
          /p:CoverletOutputFormat=opencover \
          /p:DebugType=full /p:DebugSymbols=true \
          --logger "trx;LogFileName=../../../../TestResults/Apha.BST.Application.test_results.trx"

        dotnet test src/Apha.BST/Apha.BST.Web.UnitTests/Apha.BST.Web.UnitTests.csproj \
          --no-build --configuration Release \
          /p:CollectCoverage=true \
          /p:CoverletOutput=../../../TestResults/Apha.BST.Web.coverage.opencover.xml \
          /p:CoverletOutputFormat=opencover \
          /p:DebugType=full /p:DebugSymbols=true \
          --logger "trx;LogFileName=../../../../TestResults/Apha.BST.Web.test_results.trx"

    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v2
      with:
        args: >
          -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ env.SONAR_ORG }}
          -Dsonar.token=${{ env.SONAR_TOKEN }}
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.cs.opencover.reportsPaths=../TestResults/*.opencover.xml
          -Dsonar.cs.vstest.reportsPaths=../TestResults/*.test_results.trx
          -Dsonar.coverage.exclusions=**/wwwroot/**,**/*.csthml
          -Dsonar.branch.name=${{ github.ref_name }}
          -Dsonar.verbose=true
          -Dsonar.sources=Apha.BST/Apha.BST.Application,Apha.BST/Apha.BST.Core,Apha.BST/Apha.BST.DataAccess,Apha.BST/Apha.BST.Web
          -Dsonar.tests=Apha.BST/Apha.BST.Application.UnitTests,Apha.BST/Apha.BST.Web.UnitTests
          -Dsonar.test.inclusions=**/*.cs
        working-directory: src
    - name: Upload test and coverage artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: TestResults
        path: ./TestResults
