name: Dev Build and Sonar Analysis

on:
  workflow_dispatch:
  #push:
  #  branches:
  #    - 'feature/*'
  #    - 'fix/*'
  #    - 'docs/*'

jobs:
  build-and-analyze:
    name: Build + Test + Sonar + Optional ECR Push
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Start Sonar Analysis
        shell: powershell
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"DEFRA_apha-bst" `
            /o:"defra" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io"

      - name: Restore NuGet packages
        shell: powershell
        run: dotnet restore src/Apha.BST.sln

      - name: Build Solution
        shell: powershell
        run: dotnet build src/Apha.BST.sln --configuration Release

      - name: Run Unit Tests
        shell: powershell
        run: dotnet test src/Apha.BST.sln --no-build --configuration Release --logger trx

      - name: End Sonar Analysis
        shell: powershell
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
